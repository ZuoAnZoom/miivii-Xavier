{
  "version": "0.2.0",
  "configurations": [
    { // 配置名称，将会在调试配置下拉列表中显示
      "name": "(gdb) Launch",
      // 调试器类型，该值自动生成
      "type": "cppdbg",
      // 调试方式，还可以选择attach              
      "request": "launch",
      // 调试程序时的工作目录
      "cwd": "${workspaceFolder}/src/robotcar_motion_planner",
      // 待调试的程序
      "program": "${workspaceFolder}/devel/lib/robotcar_motion_planner/state_lattice_motion_planner",
      // 传递给程序的参数，没有参数留空即可
      "args": [],
      // 是否停在程序入口点（停在main函数开始）
      "stopAtEntry": false,
      // 针对调试的程序，要添加到环境中的环境变量，例如: [{"name": "squid", "value": "clam"}]
      "environment": [],
      // 如果设置为true，则为应用程序启动外部控制台，如果为false，则不会启动控制台，并使用VS Code的内置调试控制台
      "externalConsole": false,
      // VSCode要使用的调试工具
      "MIMode": "gdb",
      // 这个重要，需要与task中的label相同
      "preLaunchTask": "catkin_make",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ]
    }
  ]
}